version: "3.7"

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "2m"
    max-file: "2"

services:
  mysql:
    image: mysql:8.0.23
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ChangeMe
      # MYSQL_ROOT_HOST: "%"
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password
      mYSQL_DATABASE: keycloak
    healthcheck:
      test: "mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}"
      start_period: 10s
      timeout: 20s
      retries: 10
    volumes:
      - ./DockerVolumes/mysql-data:/var/lib/mysql
    ports:
      - 3306:3306
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE
    networks:
      - docker-network
    logging: *default-logging      
    
  adminer:
    image: adminer
    hostname: adminer
    container_name: adminer
    restart: unless-stopped
    depends_on:
      - mysql
    ports:
      - 8081:8080    
    networks:
      - docker-network
    logging: *default-logging      
    
  portainer:
    image: portainer/portainer-ce:2.1.1-alpine
    hostname: portainer
    container_name: portainer
    restart: unless-stopped
    # Admin User password: Password01
    volumes:
      # Linux container under linux:
        #- /var/run/docker.sock:/var/run/docker.sock
        #- ~/code/DataPersistent/portainer_data:/data
      # Linux container under windows:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./DockerVolumes/portainer_data:/data
      #- D:\Temp:/data
      # Windows container:
      # Windows container:
        #- \\.\pipe\docker_engine:\\.\pipe\docker_engine
        #-C:\ProgramData\Portainer:C:\data 
    ports:
      - 8000:8000
      - 9000:9000
    networks:
      - docker-network
    logging: *default-logging      

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    hostname: keycloak
    container_name: keycloak
    restart: unless-stopped
    depends_on:
      mysql:
      #mariadb: mariadb fails!!!!
        condition: service_healthy

    environment:
      DB_VENDOR: mysql
      DB_ADDR: mysql
      DB_PORT: 3306
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_HTTPS_PORT: 8443
      # The line below is to specify JDBC parameters, which shouldn't be used in production without knowledge. 
      #  It is highly recommended that you read the MySQL JDBC driver documentation in order to use it in production!!!!
      JDBC_PARAMS: "useSSL=FALSE&allowPublicKeyRetrieval=TRUE&connectTimeout=60000"
      JAVA_OPTS: "-Djboss.as.management.blocking.timeout=3600"
      #------------------------------------------------------------------------------------------------------------
      # DO NOT work with Keycloak 12, see https://stackoverflow.com/questions/33910615/is-there-an-api-call-for-changing-user-password-on-keycloak/35014705
      # keycloak.profile.feature.account_api=disabled 
      # keycloak.profile.feature.account2=disabled 
      # keycloak.migration.action=import 
      # keycloak.migration.provider=singleFile 
      # keycloak.migration.file=/config/nodejs-test-realm.json -Dkeycloak.migration.strategy=OVERWRITE_EXISTING
      #------------------------------------------------------------------------------------------------------------
    volumes:
      - ./test/fixtures/auth-utils/nodejs-test-realm.json:/config/nodejs-test-realm.json 
    ports:
      - 8080:8080
      - 8443:8443
      - 9990:9990
    healthcheck:
      test: "curl -f http://localhost:8080/auth || exit 1"
      start_period: 10s
    networks:
      - docker-network
    logging: *default-logging      
#
##
# http://localhost:8080/auth/admin/master/console
#
# To setup MYSQL/MARIAD run the ./DB_Setup/MySQL_Keycloak_Setup_Script.sql script 
#    The script creates the 'keycloak' dataabse and the kuser & keycloak users 

# https://github.com/keycloak/keycloak-nodejs-connect
# https://github.com/keycloak/keycloak-nodejs-admin-client
# https://github.com/ccouzens/keycloak-openapi/blob/main/example_app/src/index.ts
# https://www.keycloak.org/docs/latest/securing_apps/index.html#_nodejs_adapter
#
# Very good example app:
# https://github.com/v-ladynev/keycloak-nodejs-example
#
    
networks:
  docker-network:
   name: docker-network


# ------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------
# DOCKER WINDOWS PORT BINDING ERROR
# =====================================
# ERROR: 
# ------  
#     Ports are not available: listen tcp 0.0.0.0:8022: 
#     bind: An attempt was made to access a socket in a way forbidden by its access permissions
#
# SOLUTION:
# ---------
# from admin command prompt run the following two commands:
# sc stop winnat
#
# Notes:
# sc qc winnat
# sc query winnat
# "C:\Program Files\Docker\Docker\Docker Desktop.exe"
# DO NOT "sc config WinNat start=demand" as docker will crash on startup!!!
# ------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------
